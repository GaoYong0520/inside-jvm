Java中字符串常量池

1.java中创建字符串的两种方式：
    <1>.字面量方式:
        String str1 = "iamstring";
    <2>.标准对象创建方式:
        String str2 = new String("iamstring");
        然而这两种实现其实存在着一些性能和内存占用的差别。这一切都是源于JVM为了减少字符串对象的重复创建，其维护了一个特殊的内存，这
    段内存被成为字符串常量池或者字符串字面量池。

2.工作原理：
        当代码中出现字面量形式创建字符串对象时，JVM首先会对这个字面量进行检查，如果字符串常量池中存在相同内容的字符串对象的引用，则
    将这个引用返回，否则新的字符串对象被创建，然后将这个引用放入字符串常量池，并返回该引用。
        当我们使用了new来构造字符串对象的时候，不管字符串常量池中有没有相同内容的对象的引用，新的字符串对象都会创建。

3.intern
        如果使用new创建时想查找字符串常量池中的引用，可以使用intern.
        (例子t11)

4.引用 or 对象
  字符串常量池中存放的时引用还是对象，这个问题是最常见的。字符串常量池存放的是对象引用，不是对象。在Java中，对象都创建在堆内存中。

  你知道下面的代码，会创建几个字符串对象，在字符串常量池中保存几个引用么？
  String test = "a" + "b" + "c";
  答案是只创建了一个对象，在常量池中也只保存一个引用。

  实际上在编译期间，已经将这三个字面量合成了一个。这样做实际上是一种优化，避免了创建多余的字符串对象，也没有发生字符串拼接问题。
